<!DOCTYPE html>
<html>

<head>
    <title>Your Web Page</title>
    <script src="/www/jquery3.6.0.min.js"></script>
    <script src="/www/chart2.9.3.min.js"></script>
</head>

<body>
    <label for="runbackSpeed">RunBack Speed</label>
    <input type="number" id="runbackSpeed"><br />

    <label for="calibrationSpeed">Calibration Speed</label>
    <input type="number" id="calibrationSpeed"><br />

    <label for="greatCircleRadius">Great Circle Radius</label>
    <input type="number" id="greatCircleRadius"><br />
    
    <label for="moveTo">Move To</label>
    <input type="number" id="moveTo"><br />

    <label for="position">Position:</label>
    <span id="position">0</span><br />

    <label for="velocity">Velocity:</label>
    <span id="velocity">0</span><br />

    <button id="resetButton">Reset Graph</button><br />
    <canvas id="chart"></canvas>

    <script>
        var previousPosition = -1;
        var chartData = {
            labels: [],
            datasets: [{
                label: 'Position vs Velocity',
                data: [],
                backgroundColor: 'rgba(75, 192, 192, 0.2)',
                borderColor: 'rgba(75, 192, 192, 1)',
                borderWidth: 1
            }]
        };

        var chartOptions = {
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        };

        var chart = new Chart(document.getElementById('chart').getContext('2d'), {
            type: 'line',
            data: chartData,
            options: chartOptions
        });

        function updateChart() {

            // $.getJSON("/getStatus")
            //     .done(function (data) {
            //         console.log("Data received: ", data);
            //     })
            //     .fail(function (jqxhr, textStatus, error) {
            //         console.log("Request Failed: " + textStatus + ", " + error);
            //     });

            $.getJSON("/getStatus", function (data) {
                if (!$("#runbackSpeed").is(":focus")) {
                    $("#runbackSpeed").val(data.runbackSpeed);
                }
                if (!$("#calibrationSpeed").is(":focus")) {
                    $("#calibrationSpeed").val(data.calibrationSpeed);
                }

                if (!$("#greatCircleRadius").is(":focus")) {
                    $("#greatCircleRadius").val(data.greatCircleRadius);
                }

                $("#position").text(data.position);
                $("#velocity").text(data.velocity);

                if (data.position !== -1 && data.position !== previousPosition) {
                    chartData.labels.push(data.position);
                    chartData.datasets[0].data.push(data.velocity);
                    previousPosition = data.position;
                }
                chart.update();
            });
        }

        $("#resetButton").click(function () {
            chartData.labels = [];
            chartData.datasets[0].data = [];
            chart.update();
        });

        $("#runbackSpeed, #calibrationSpeed, #greatCircleRadius, #moveTo").change(function () {
            $.post("/" + $(this).attr('id'), { value: $(this).val() });
        });

        setInterval(updateChart, 1000);
    </script>
</body>

</html>